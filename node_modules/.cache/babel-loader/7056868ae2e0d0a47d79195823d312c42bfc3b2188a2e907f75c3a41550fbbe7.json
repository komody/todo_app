{"ast":null,"code":"var _jsxFileName = \"/Users/maeharatakaya/Desktop/type_udemy/todolist-test/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const handleChange = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputText) {\n      return;\n    }\n    const newTodo = {\n      inputValue: input,\n      id: todos.length,\n      checked: false\n    };\n    setTodos([newTodo, ...todos]);\n    console.log(inputText);\n    setInputValue(inputText);\n  };\n  const handleEdit = (id, inputValue) => {\n    const deepCopy = todos.map(todo => ({\n      ...todo\n    }));\n    console.log(deepCopy);\n    const newTodos = deepCopy.map(todo => {\n      if (todo.id === id) {\n        todo.inputValue = inputValue;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n  const handleChecked = (id, checked) => {\n    /* ディープコピー(完全にコピーされた別の配列)に変えよう(ミューテートから守るため) */\n    const deepCopy = todos.map(todo => ({\n      ...todo\n    }));\n    // console.log(deepCopy);\n\n    const newTodos = deepCopy.map(todo => {\n      if (todo.id === id) {\n        //反転\n        todo.checked = !checked;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n  const handleDelete = id => {\n    const newtodos = todos.filter(todo => todo.id !== id);\n    setTodos(newtodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo\\u30EA\\u30B9\\u30C8\\u3000\\u521D\\u7D1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => handleChange(e),\n          className: \"inputText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\u4F5C\\u6210\",\n          className: \"submitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todoList\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [todo.inputValue, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => handleEdit(todo.id, e.target.value),\n            className: \"inputText\",\n            value: todo.inputValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.checked,\n            onChange: () => handleChecked(todo.id, todo.checked),\n            className: \"inputText\",\n            value: todo.inputValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(todo.id),\n            children: \"\\u524A\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MaTlFAKntCxRs21boMprNydETvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","todos","setTodos","handleChange","e","preventDefault","console","log","target","value","handleSubmit","inputText","newTodo","input","id","length","checked","handleEdit","deepCopy","map","todo","newTodos","handleChecked","handleDelete","newtodos","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/maeharatakaya/Desktop/type_udemy/todolist-test/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  type Todo = {\n    inputValue: string;\n    id: number;\n    checked: boolean;\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    console.log(e.target.value);\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if(!inputText ){\n      return;\n    }\n\n    const newTodo: Todo = {\n      inputValue: input,\n      id: todos.length,\n      checked: false,\n    };\n\n    setTodos([newTodo, ...todos]);\n    console.log(inputText);\n    setInputValue(inputText);\n  };\n\n  const handleEdit = (id: number, inputValue: string) => {\n\n    const deepCopy = todos.map((todo) => ({ ...todo }));\n    console.log(deepCopy);\n\n    const newTodos = deepCopy.map((todo) => {\n      if (todo.id === id) {\n        todo.inputValue = inputValue;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n\n  const handleChecked = (id: number, checked: boolean) => {\n    /* ディープコピー(完全にコピーされた別の配列)に変えよう(ミューテートから守るため) */\n    const deepCopy = todos.map((todo) => ({ ...todo }));\n    // console.log(deepCopy);\n\n    const newTodos = deepCopy.map((todo) => {\n      if (todo.id === id) {\n        //反転\n        todo.checked = !checked;\n      }\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  const handleDelete = (id: number) => {\n    const newtodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newtodos);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h2>Todoリスト　初級</h2>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <input \n            type=\"text\" \n            onChange={(e) => handleChange(e)} \n            className=\"inputText\"\n           />\n          <input type=\"submit\" value=\"作成\" className='submitButton' />\n        </form>\n        <ul className='todoList'>\n          {todos.map((todo) => (\n            <li key={todo.id}>\n              {todo.inputValue}\n              <input \n              type=\"text\"\n              onChange={(e) => handleEdit(todo.id, e.target.value)}\n              className=\"inputText\"\n              value={todo.inputValue}\n               />\n              <input \n              type=\"checkbox\"\n              checked={todo.checked}\n              onChange={() => handleChecked(todo.id, todo.checked)}\n              className=\"inputText\"\n              value={todo.inputValue}\n               />\n              <button onClick={() => handleDelete(todo.id)}>削除</button>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}